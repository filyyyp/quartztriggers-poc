spring.application.name=quartztriggers

# PostgreSQL database configuration
spring.datasource.url=jdbc:postgresql://localhost:5432/mydatabase
spring.datasource.username=myuser
spring.datasource.password=secret
spring.datasource.driver-class-name=org.postgresql.Driver
spring.datasource.hikari.auto-commit=false
spring.datasource.hikari.maximum-pool-size=10
# JPA configurations
spring.jpa.hibernate.ddl-auto=validate
#spring.jpa.show-sql=true
#spring.jpa.properties.hibernate.generate_statistics=true
spring.jpa.properties.hibernate.jdbc.batch_size=50
spring.jpa.properties.hibernate.order_inserts=true
spring.jpa.properties.hibernate.order_updates=true

# SQL initialization
spring.sql.init.mode=always
spring.sql.init.platform=postgres

# Quartz
spring.quartz.overwrite-existing-jobs=true
spring.quartz.properties.org.quartz.threadPool.threadCount=10
#MEMORY
#spring.quartz.job-store-type=memory
#JDBC
spring.quartz.job-store-type=jdbc
spring.quartz.jdbc.initialize-schema=always
spring.quartz.properties.org.quartz.jobStore.driverDelegateClass=org.quartz.impl.jdbcjobstore.PostgreSQLDelegate

#Acutator settings
management.endpoints.web.exposure.include=quartz,health,metrics,prometheus,info
management.endpoint.quartz.access=unrestricted
#App settings
app.number-of-generated-products=10000
app.max-expiration-date-for-generated-products-seconds=300
#Just in time of expiration
app.just-in-time-scheduling-enabled=false
app.schedule-triggers-for-nearest-seconds=${app.max-expiration-date-for-generated-products-seconds}
app.scheduling-product-expiration-interval-seconds=${app.max-expiration-date-for-generated-products-seconds}
#Scheduled expiration every minute
app.scheduled-expiration-enabled=true
app.product-expiration-scheduled-interval-seconds=10